{"version":3,"sources":["component/Square.js","component/Board.js","component/helper/calculateWinner.js","component/Game.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","renderSquare","Component","calculateWinner","lines","length","a","b","c","Game","history","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.649dc5db.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {\n  return (\n    <div>\n      <button className='square' onClick={() => props.onClick()}>\n        {props.value}\n      </button>\n    </div>\n  );\n}\n\nexport default Square;","import React, { Component } from \"react\";\n\nimport Square from \"./Square\";\n\nclass Board extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsquares: Array(9).fill(null),\n\t\t\txIsNext: true\n\t\t};\n\t}\n\n\trenderSquare(i) {\n\t\treturn <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Board;\n","export function calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6]\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n","import React, { Component } from \"react\";\n\nimport Board from \"./Board\";\nimport { calculateWinner } from \"./helper/calculateWinner\";\n\nclass Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null)\n\t\t\t\t}\n\t\t\t],\n\t\t\txIsNext: true,\n\t\t\tstepNumber: 0\n\t\t};\n\t}\n\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares\n\t\t\t\t}\n\t\t\t]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext\n\t\t});\n\t}\n\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 === 0\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ? \"Go to move #\" + move : \"Go to game start\";\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = \"Winner: \" + winner;\n\t\t} else {\n\t\t\tstatus = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t\t<Board squares={current.squares} onClick={i => this.handleClick(i)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Game;\n","import React from \"react\";\n\nimport Game from \"./component/Game\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Tic Tac Toe</h1>\n\t\t\t\t<Game />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}